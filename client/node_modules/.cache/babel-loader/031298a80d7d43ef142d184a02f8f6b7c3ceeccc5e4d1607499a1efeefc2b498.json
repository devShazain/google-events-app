{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Apps\\\\google-events-app\\\\client\\\\src\\\\components\\\\SheetEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './SheetEvents.css';\nimport { gapi } from 'gapi-script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SheetEvents = ({\n  onBack\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [form, setForm] = useState({\n    name: '',\n    date: '',\n    time: '',\n    description: ''\n  });\n  const [showForm, setShowForm] = useState(false);\n  const SPREADSHEET_ID = '142ofxNSx4iqQfNmyWqQndI8U5fuIVkI0rmwO4c69xB8';\n  const API_KEY = 'AIzaSyAWhQF4XMLansrLQRNk3Cx0kwQALO2Rnf8';\n  const RANGE = 'Sheet1!A2:D';\n  const SHEET_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${RANGE}?key=${API_KEY}`;\n  const fetchEvents = () => {\n    setLoading(true);\n    fetch(SHEET_URL).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      const rows = data.values || [];\n      const formatted = rows.map((row, index) => ({\n        id: index,\n        name: row[0] || 'Unnamed',\n        date: row[1] || 'No date',\n        time: row[2] || 'No time',\n        description: row[3] || 'No description'\n      }));\n      setEvents(formatted);\n      setError(null);\n    }).catch(err => {\n      console.error('Error fetching data:', err);\n      setError('Failed to load events. Please try again later.');\n      setEvents([]);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const addEvent = async e => {\n    e.preventDefault();\n    setError(null);\n\n    // Validate form\n    if (!form.name || !form.date || !form.time) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    try {\n      // Prepare the values to append\n      const values = [[form.name, form.date, form.time, form.description]];\n\n      // Use the Google Sheets API to append the values\n      await gapi.client.sheets.spreadsheets.values.append({\n        spreadsheetId: SPREADSHEET_ID,\n        range: 'Sheet1!A:D',\n        valueInputOption: 'USER_ENTERED',\n        insertDataOption: 'INSERT_ROWS',\n        resource: {\n          values: values\n        }\n      });\n\n      // Clear the form\n      setForm({\n        name: '',\n        date: '',\n        time: '',\n        description: ''\n      });\n\n      // Refresh the events list\n      fetchEvents();\n      setShowForm(false);\n      alert('✅ Event added successfully!');\n    } catch (err) {\n      console.error('Error adding event:', err);\n      setError(`Failed to add event: ${err.message}`);\n    }\n  };\n  const deleteEvent = async index => {\n    try {\n      // Get the actual row number (add 2 because our data starts at A2)\n      const rowToDelete = index + 2;\n\n      // Delete the row using the Google Sheets API\n      await gapi.client.sheets.spreadsheets.batchUpdate({\n        spreadsheetId: SPREADSHEET_ID,\n        resource: {\n          requests: [{\n            deleteDimension: {\n              range: {\n                sheetId: 0,\n                // Assuming it's the first sheet\n                dimension: 'ROWS',\n                startIndex: rowToDelete - 1,\n                // 0-based index\n                endIndex: rowToDelete // exclusive end index\n              }\n            }\n          }]\n        }\n      });\n\n      // Refresh the events list\n      fetchEvents();\n      alert('✅ Event deleted successfully!');\n    } catch (err) {\n      console.error('Error deleting event:', err);\n      setError(`Failed to delete event: ${err.message}`);\n    }\n  };\n  const toggleForm = () => {\n    setShowForm(!showForm);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sheet-events-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCCB Google Sheet Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sheet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-event-btn\",\n          onClick: toggleForm,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: showForm ? '❌' : '➕'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), showForm ? 'Cancel' : 'Add Event']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"refresh-btn\",\n          onClick: fetchEvents,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), \" Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: onBack,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\u2B05\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), \" Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"form-title\",\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addEvent,\n        className: \"sheet-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"event-name\",\n            children: \"Event Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"event-name\",\n            placeholder: \"Enter event name\",\n            value: form.name,\n            onChange: e => setForm({\n              ...form,\n              name: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"event-date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"event-date\",\n            type: \"date\",\n            value: form.date,\n            onChange: e => setForm({\n              ...form,\n              date: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"event-time\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"event-time\",\n            type: \"time\",\n            value: form.time,\n            onChange: e => setForm({\n              ...form,\n              time: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"event-description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"event-description\",\n            placeholder: \"Enter event description\",\n            value: form.description,\n            onChange: e => setForm({\n              ...form,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-event-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\u2795\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), \" Add to Google Sheet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }, this), !loading && !error && (!events || events.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-events-message\",\n      children: \"No events found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this), events && events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-list\",\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-card\",\n          style: {\n            \"--index\": index\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-cell event-name\",\n            children: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-cell event-date\",\n            children: event.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-cell event-time\",\n            children: event.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-cell event-description\",\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-cell event-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => deleteEvent(index),\n              title: \"Delete Event\",\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(SheetEvents, \"890zy7XpnCXhnyNmBJE+tEFbkSY=\");\n_c = SheetEvents;\nexport default SheetEvents;\nvar _c;\n$RefreshReg$(_c, \"SheetEvents\");","map":{"version":3,"names":["React","useEffect","useState","gapi","jsxDEV","_jsxDEV","SheetEvents","onBack","_s","events","setEvents","error","setError","loading","setLoading","form","setForm","name","date","time","description","showForm","setShowForm","SPREADSHEET_ID","API_KEY","RANGE","SHEET_URL","fetchEvents","fetch","then","res","ok","Error","json","data","rows","values","formatted","map","row","index","id","catch","err","console","finally","addEvent","e","preventDefault","client","sheets","spreadsheets","append","spreadsheetId","range","valueInputOption","insertDataOption","resource","alert","message","deleteEvent","rowToDelete","batchUpdate","requests","deleteDimension","sheetId","dimension","startIndex","endIndex","toggleForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","placeholder","value","onChange","target","required","type","length","event","style","title","_c","$RefreshReg$"],"sources":["D:/React Apps/google-events-app/client/src/components/SheetEvents.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './SheetEvents.css';\r\nimport { gapi } from 'gapi-script';\r\n\r\nconst SheetEvents = ({ onBack }) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        date: '',\r\n        time: '',\r\n        description: ''\r\n    });\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n    const SPREADSHEET_ID = '142ofxNSx4iqQfNmyWqQndI8U5fuIVkI0rmwO4c69xB8';\r\n    const API_KEY = 'AIzaSyAWhQF4XMLansrLQRNk3Cx0kwQALO2Rnf8';\r\n    const RANGE = 'Sheet1!A2:D';\r\n\r\n    const SHEET_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${RANGE}?key=${API_KEY}`;\r\n\r\n    const fetchEvents = () => {\r\n        setLoading(true);\r\n        fetch(SHEET_URL)\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                const rows = data.values || [];\r\n                const formatted = rows.map((row, index) => ({\r\n                    id: index,\r\n                    name: row[0] || 'Unnamed',\r\n                    date: row[1] || 'No date',\r\n                    time: row[2] || 'No time',\r\n                    description: row[3] || 'No description',\r\n                }));\r\n                setEvents(formatted);\r\n                setError(null);\r\n            })\r\n            .catch((err) => {\r\n                console.error('Error fetching data:', err);\r\n                setError('Failed to load events. Please try again later.');\r\n                setEvents([]);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    const addEvent = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n\r\n        // Validate form\r\n        if (!form.name || !form.date || !form.time) {\r\n            setError('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Prepare the values to append\r\n            const values = [[form.name, form.date, form.time, form.description]];\r\n            \r\n            // Use the Google Sheets API to append the values\r\n            await gapi.client.sheets.spreadsheets.values.append({\r\n                spreadsheetId: SPREADSHEET_ID,\r\n                range: 'Sheet1!A:D',\r\n                valueInputOption: 'USER_ENTERED',\r\n                insertDataOption: 'INSERT_ROWS',\r\n                resource: {\r\n                    values: values\r\n                }\r\n            });\r\n\r\n            // Clear the form\r\n            setForm({\r\n                name: '',\r\n                date: '',\r\n                time: '',\r\n                description: ''\r\n            });\r\n\r\n            // Refresh the events list\r\n            fetchEvents();\r\n            setShowForm(false);\r\n            alert('✅ Event added successfully!');\r\n        } catch (err) {\r\n            console.error('Error adding event:', err);\r\n            setError(`Failed to add event: ${err.message}`);\r\n        }\r\n    };\r\n\r\n    const deleteEvent = async (index) => {\r\n        try {\r\n            // Get the actual row number (add 2 because our data starts at A2)\r\n            const rowToDelete = index + 2;\r\n\r\n            // Delete the row using the Google Sheets API\r\n            await gapi.client.sheets.spreadsheets.batchUpdate({\r\n                spreadsheetId: SPREADSHEET_ID,\r\n                resource: {\r\n                    requests: [{\r\n                        deleteDimension: {\r\n                            range: {\r\n                                sheetId: 0, // Assuming it's the first sheet\r\n                                dimension: 'ROWS',\r\n                                startIndex: rowToDelete - 1, // 0-based index\r\n                                endIndex: rowToDelete // exclusive end index\r\n                            }\r\n                        }\r\n                    }]\r\n                }\r\n            });\r\n\r\n            // Refresh the events list\r\n            fetchEvents();\r\n            alert('✅ Event deleted successfully!');\r\n        } catch (err) {\r\n            console.error('Error deleting event:', err);\r\n            setError(`Failed to delete event: ${err.message}`);\r\n        }\r\n    };\r\n\r\n    const toggleForm = () => {\r\n        setShowForm(!showForm);\r\n        setError(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"sheet-events-container\">\r\n            <div className=\"sheet-header\">\r\n                <h2 className=\"section-title\">📋 Google Sheet Events</h2>\r\n                <div className=\"sheet-actions\">\r\n                    <button className=\"add-event-btn\" onClick={toggleForm}>\r\n                        <span className=\"btn-icon\">{showForm ? '❌' : '➕'}</span> \r\n                        {showForm ? 'Cancel' : 'Add Event'}\r\n                    </button>\r\n                    <button className=\"refresh-btn\" onClick={fetchEvents}>\r\n                        <span className=\"btn-icon\">🔄</span> Refresh\r\n                    </button>\r\n                    <button className=\"back-btn\" onClick={onBack}>\r\n                        <span className=\"btn-icon\">⬅️</span> Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            \r\n            {showForm && (\r\n                <div className=\"sheet-form-container\">\r\n                    <h3 className=\"form-title\">Add New Event</h3>\r\n                    <form onSubmit={addEvent} className=\"sheet-form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"event-name\">Event Name</label>\r\n                            <input\r\n                                id=\"event-name\"\r\n                                placeholder=\"Enter event name\"\r\n                                value={form.name}\r\n                                onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"event-date\">Date</label>\r\n                            <input\r\n                                id=\"event-date\"\r\n                                type=\"date\"\r\n                                value={form.date}\r\n                                onChange={(e) => setForm({ ...form, date: e.target.value })}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"event-time\">Time</label>\r\n                            <input\r\n                                id=\"event-time\"\r\n                                type=\"time\"\r\n                                value={form.time}\r\n                                onChange={(e) => setForm({ ...form, time: e.target.value })}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"event-description\">Description</label>\r\n                            <textarea\r\n                                id=\"event-description\"\r\n                                placeholder=\"Enter event description\"\r\n                                value={form.description}\r\n                                onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" className=\"add-event-btn\">\r\n                            <span className=\"btn-icon\">➕</span> Add to Google Sheet\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            \r\n            {loading && <p className=\"loading-message\">Loading events...</p>}\r\n            {!loading && !error && (!events || events.length === 0) && (\r\n                <p className=\"no-events-message\">No events found.</p>\r\n            )}\r\n            \r\n            {events && events.length > 0 && (\r\n                <div className=\"events-table\">\r\n                    <div className=\"table-header\">\r\n                        <div className=\"header-cell\">Event Name</div>\r\n                        <div className=\"header-cell\">Date</div>\r\n                        <div className=\"header-cell\">Time</div>\r\n                        <div className=\"header-cell\">Description</div>\r\n                        <div className=\"header-cell\">Actions</div>\r\n                    </div>\r\n                    \r\n                    <div className=\"events-list\">\r\n                        {events.map((event, index) => (\r\n                            <div key={index} className=\"event-card\" style={{\"--index\": index}}>\r\n                                <div className=\"event-cell event-name\">{event.name}</div>\r\n                                <div className=\"event-cell event-date\">{event.date}</div>\r\n                                <div className=\"event-cell event-time\">{event.time}</div>\r\n                                <div className=\"event-cell event-description\">{event.description}</div>\r\n                                <div className=\"event-cell event-actions\">\r\n                                    <button \r\n                                        className=\"delete-btn\" \r\n                                        onClick={() => deleteEvent(index)}\r\n                                        title=\"Delete Event\"\r\n                                    >\r\n                                        🗑️\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SheetEvents;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}